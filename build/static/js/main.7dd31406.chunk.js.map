{"version":3,"sources":["component/Home.js","component/ApplicationForm.js","component/UserDetailModal.js","component/UsersList.js","component/AdminDashboard.js","component/NavBar.js","App.js","index.js"],"names":["Home","props","className","src","width","alt","style","margin","textAlign","justify","ApplicationForm","useState","fullName","setFullName","email","setEmail","mobile","setMobile","jobTitle","setJobTitle","experience","setExperience","techSkills","setTechSkills","formErrors","setFormErrors","isSaved","setIsSaved","errors","useEffect","handleToggle","handleChange","e","inputName","target","name","value","padding","onSubmit","preventDefault","trim","length","validator","isEmail","Object","keys","formData","axios","post","then","response","Swal","fire","catch","error","message","type","onChange","placeholder","options","label","UserDetailModal","userDetail","showModal","handleModal","Modal","show","size","centered","Header","Title","id","Body","phone","skills","split","map","skill","index","Footer","onClick","UsersList","appliedUsers","title","updateStatus","setShowModal","setUserDetail","updateApplicationStatus","status","put","user","substr","createdAt","slice","_id","get","result","data","marginLeft","AdminDashboard","users","setUsers","setAppliedUsers","key","setKey","reverse","ele","Tabs","activeKey","onSelect","k","jobRole","filter","getFilteredUsers","Tab","eventKey","withRouter","exact","to","activeClassName","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dd31406.chunk.js","sourcesContent":["import React from 'react' \r\n\r\nconst Home = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"mb-3\">Welcome</h3>\r\n            <div className=\"row mb-4\">\r\n                <img src=\"Job.PNG\" width=\"100%\" alt=\"we are hiring\"/>\r\n            </div>\r\n            <div className=\"flex-container d-flex\">\r\n                <div style={{margin:'20px',width:'50%', textAlign:'center'}}>\r\n                    <p>\r\n                        This is a Job Application App developed using React in the front-end. In this app, we are accepting the job application for various posts in our company. In order to apply for the job, the user has to click on the application-form tab that is presented on the menu. A form will be opened. You have to fill all the fields with appropriate data. All the fields are required that means you should not leave any field blank. For the email field, you should provide valid email address. For the contact information field, you should provide your 10 digits mobile number. \r\n                    </p>\r\n                </div>\r\n                <div style={{ margin:'20px',width:'50%', textAlign:'center', justify:'content'}}>\r\n                    <p>\r\n                     For the job role you are applying for, you should select one from the dropdown menu. In the experience field, put your experience in years and months format. Incase if you are fresher, you can put 0. And the final field should contain all your technical skills. You have to put it in a single sentence with comma separated. Once everything is done, hit the submit button and you are done. After we go through your application, you will hear from us in two days. \r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Home","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport validator from 'validator'\r\nimport Select from 'react-select'\r\n\r\nconst ApplicationForm = (props) => {\r\n    const [ fullName, setFullName ] = useState('')\r\n    const [ email, setEmail ] = useState('')\r\n    const [ mobile, setMobile ] = useState('')\r\n    const [ jobTitle, setJobTitle ] = useState()\r\n    const [ experience, setExperience ] = useState('')\r\n    const [ techSkills, setTechSkills ] = useState('')\r\n    const [ formErrors, setFormErrors ] = useState({})\r\n    const [ isSaved, setIsSaved ] = useState(false)\r\n    const errors = {}\r\n    \r\n    const options = [\r\n        {value: 'Select---', label: ''},\r\n        { value: 'Front-End Developer', label: 'Front-End Developer'},\r\n        { value: 'Node.js Developer', label: 'Node.js Developer'},\r\n        { value: 'MEAN Stack Developer', label: 'MEAN Stack Developer' },\r\n        { value: 'FULL Stack Delveloper', label: 'FULL Stack Delveloper'}\r\n    ]\r\n\r\n    useEffect(() => {\r\n        if(isSaved){\r\n            setFullName('')\r\n            setEmail('')\r\n            setMobile('')\r\n            setJobTitle('')\r\n            setExperience('')\r\n            setTechSkills('')\r\n            setFormErrors({})\r\n            handleToggle()\r\n        }\r\n    },[isSaved])\r\n    \r\n    const handleToggle = () => {\r\n        setIsSaved(!isSaved)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        const inputName = e.target.name\r\n\r\n        if(inputName === \"fullname\"){\r\n            setFullName(e.target.value)\r\n        }\r\n        else if(inputName === 'email'){\r\n            setEmail(e.target.value)\r\n        } \r\n        else if(inputName === 'mobile'){\r\n            setMobile(e.target.value)\r\n        } \r\n        else if(inputName === 'jobTitle'){\r\n            setJobTitle(e.target.value)\r\n        } \r\n        else if(inputName === 'experience'){\r\n            setExperience(e.target.value)\r\n        } \r\n        else{\r\n            setTechSkills(e.target.value)\r\n        }\r\n    }\r\n\r\n    const handleSelectChange = (jobTitle) => {\r\n        setJobTitle(jobTitle)\r\n    }\r\n\r\n    const runValidations = () => {\r\n        if(fullName.trim().length === 0){\r\n            errors.name = 'Name cannot be blank'\r\n        }\r\n        if(email.trim().length === 0){\r\n            errors.email = 'Email cannot be blank'\r\n        } else if(!validator.isEmail(email)){\r\n            errors.email = 'Invalid email format'\r\n        }\r\n\r\n        if(mobile.trim().length === 0){\r\n            errors.mobile = 'Contact number cannot be blank'\r\n        } else if(mobile.length !== 10){\r\n            errors.mobile = 'Invalid mobile number'\r\n        }\r\n\r\n        if(jobTitle.value.trim().length === 0){\r\n            errors.jobTitle = 'Job title cannot be blank'\r\n        }\r\n\r\n        if(experience.trim().length === 0){\r\n            errors.experience = 'Experience cannot be blank'\r\n        }\r\n\r\n        if(techSkills.trim().length === 0){\r\n            errors.techSkills = 'Technical skills cannot be blank'\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        runValidations()\r\n\r\n        if(Object.keys(errors).length > 0){\r\n            setFormErrors(errors)\r\n        }\r\n        else{\r\n            const formData = {\r\n                'name': fullName,\r\n                'email': email,\r\n                'phone': mobile,\r\n                'skills': techSkills,\r\n                'jobTitle': jobTitle.value,\r\n                'experience': experience\r\n            }\r\n            \r\n            axios.post('http://dct-application-form.herokuapp.com/users/application-form', formData)\r\n                 .then((response) => {\r\n                        Swal.fire('Success','Application submitted successfully','success')\r\n                        handleToggle()\r\n                 })\r\n                 .catch((error) => {\r\n                     Swal.fire('Oops..',error.message,'error')\r\n                 })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{padding:'10px'}}>\r\n            <form onSubmit={handleSubmit}>\r\n                <table className=\"table\" >\r\n                    <thead></thead>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>Full name</td>\r\n                            <td>\r\n                                <input type=\"text\" className=\"form-control form-control-sm\"\r\n                                        name=\"fullname\" \r\n                                        value={fullName} \r\n                                        onChange={handleChange}\r\n                                        placeholder=\"Full Name\" />\r\n                                { formErrors.name && \r\n                                    <span className=\"text-danger\">{ formErrors.name }</span>\r\n                                } \r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td>Email</td>\r\n                            <td>\r\n                                <input type=\"text\" className=\"form-control form-control-sm\"\r\n                                        name=\"email\" \r\n                                        value={email} \r\n                                        onChange={handleChange} \r\n                                        placeholder=\"example@email.com\" />\r\n                                { formErrors.email && \r\n                                    <span className=\"text-danger\">{ formErrors.email }</span>\r\n                                } \r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td>Contact Number</td>\r\n                            <td>\r\n                                <input type=\"text\" className=\"form-control form-control-sm\"\r\n                                        name=\"mobile\" \r\n                                        value={mobile} \r\n                                        onChange={handleChange} \r\n                                        placeholder=\"+91 9988554433\" />\r\n                                { formErrors.mobile && \r\n                                    <span className=\"text-danger\">{ formErrors.mobile }</span> \r\n                                } \r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td>Application For</td>\r\n                            <td>\r\n                                <Select  name=\"jobTitle\" \r\n                                        value={jobTitle} \r\n                                        onChange={handleSelectChange}\r\n                                        options={options} />\r\n                                { formErrors.jobTitle && \r\n                                    <span className=\"text-danger\">{ formErrors.jobTitle }</span> \r\n                                } \r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td>Experience</td>\r\n                            <td>\r\n                                <input type=\"text\" className=\"form-control form-control-sm\"\r\n                                        name=\"experience\" \r\n                                        value={experience} \r\n                                        onChange={handleChange} \r\n                                        placeholder=\"Experience (2 years, 3 months)\"/>\r\n                                    { formErrors.experience && \r\n                                        <span className=\"text-danger\">{ formErrors.experience }</span>\r\n                                    } \r\n                            </td>\r\n                        </tr>\r\n\r\n                        <tr>\r\n                            <td>Technical Skills</td>\r\n                            <td>\r\n                                <textarea className=\"form-control form-control-sm\"\r\n                                        name=\"techSkills\" \r\n                                        value={techSkills} \r\n                                        onChange={handleChange} \r\n                                        placeholder=\"Technical Skills\"></textarea>\r\n                                { formErrors.techSkills && \r\n                                    <span className=\"text-danger\">{ formErrors.techSkills }</span>\r\n                                }  \r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td></td>\r\n                            <td>\r\n                                <input type=\"submit\" className=\"btn btn-primary\" value=\"Send Application\" />\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApplicationForm","import React from 'react'\r\nimport { Modal} from 'react-bootstrap'\r\n\r\nconst UserDetailModal = (props) => {\r\n    const { userDetail, showModal, handleModal } = props\r\n\r\n    return (\r\n        <Modal\r\n            show={showModal}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n            <Modal.Header>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {userDetail.name} Profile\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <table className=\"table table-borderless\">\r\n                            <thead></thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>Contact Number</td>\r\n                                    <td>{userDetail.phone}</td>    \r\n                                </tr> \r\n                                <tr>\r\n                                    <td>Email</td>\r\n                                    <td>{userDetail.email}</td>  \r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Skills</td>\r\n                                    <td>{\r\n                                        userDetail.skills.split(',').map((skill, index) => {\r\n                                            return (\r\n                                                <>\r\n                                                    <span key={index} className=\"mb-1\">{skill.trim()}<br/></span>\r\n                                                </>\r\n                                            )\r\n                                        })}</td>\r\n\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>Experience</td> \r\n                                    <td>{userDetail.experience}</td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <button onClick={handleModal}>Close</button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default UserDetailModal","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport UserDetailModal from './UserDetailModal'\r\n\r\nconst UsersList = (props) => {\r\n    const { appliedUsers, title, updateStatus } = props\r\n    const [ showModal, setShowModal ] = useState(false)\r\n    const [ userDetail, setUserDetail ] = useState({})\r\n\r\n    const viewDetails = (id) => {\r\n        axios.get(`http://dct-application-form.herokuapp.com/users/application-form/${id}`)\r\n             .then((response) => {\r\n                 const result = response.data\r\n                 setUserDetail(result)\r\n                 setShowModal(true)\r\n             })\r\n             .catch((error) => {\r\n                Swal.fire('Oops..',error.message,'error')\r\n             })\r\n    }\r\n\r\n    const handleModal = () => {\r\n        setShowModal(!showModal)\r\n    }\r\n\r\n    const updateApplicationStatus = (id, status) => {\r\n        axios.put('http://dct-application-form.herokuapp.com/users/application-form/update/'+id,\r\n                 { \"status\": status})\r\n             .then((response) => {\r\n                 Swal.fire('Success',`Applicant is ${status}`,'success')\r\n                 updateStatus(id,status)\r\n             })\r\n             .catch((error) => {\r\n                 Swal.fire('Oops..',error.message,'error')\r\n             })\r\n    }\r\n\r\n    return (\r\n        <div width=\"1116px\">\r\n            <h4>{title ? `${title}s` : 'All Candidates'} - {appliedUsers.length} </h4>\r\n            <h6>List of candidates applied for {title} job</h6>\r\n            {\r\n                appliedUsers.length > 0 &&             \r\n                <table className=\" table table-bordered mt-3\" >\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"col-sm-1\">Name</th>\r\n                            <th className=\"col-sm-3\">Technical Skills</th>\r\n                            <th className=\"col-sm-2\">Experience</th>\r\n                            <th className=\"col-sm-2\">Applied Date</th>\r\n                            <th className=\"col-sm-1\">ViewDetails</th>\r\n                            <th className=\"col-sm-3\">Update Application Status</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody >\r\n                        {\r\n                            appliedUsers.map(user => {\r\n                                return (\r\n                                    <tr key={user._id}>\r\n                                        <td>{user.name}</td>\r\n                                        <td>{user.skills.substr(0,40)}</td>\r\n                                        <td>{user.experience}</td>\r\n                                        <td >{user.createdAt.slice(0,10)}</td>\r\n                                        <td >\r\n                                            <button className=\"btn btn-info btn-sm\"\r\n                                                    onClick={() => viewDetails(user._id)}>\r\n                                                View</button>\r\n                                        </td>\r\n                                        \r\n                                        <td >\r\n                                            { user.status === 'shortlisted'  ? (\r\n                                                <button className=\"btn btn-success btn-sm \">Shortlisted</button>\r\n                                            ) : user.status === 'rejected' ? (\r\n                                                <button className=\"btn btn-danger btn-sm\">Rejected</button>\r\n                                            ) : (\r\n                                                <>\r\n                                                <button className=\"btn btn-success btn-sm \"\r\n                                                        onClick={() => updateApplicationStatus(user._id,'shortlisted')}>\r\n                                                    Shortlist</button> \r\n                                                <button className=\"btn btn-danger btn-sm ml-2\" style={{marginLeft: '5px'}}\r\n                                                        onClick={() => updateApplicationStatus(user._id, 'rejected')}>\r\n                                                    Reject</button>\r\n                                                </>\r\n                                            )\r\n                                            }\r\n                                        </td>\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                        <tr></tr>\r\n                    </tbody>\r\n                </table>\r\n            }\r\n\r\n            { showModal && \r\n                    <UserDetailModal userDetail={userDetail} \r\n                                     showModal={showModal}\r\n                                     handleModal={handleModal}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UsersList","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Tabs, Tab } from 'react-bootstrap'\r\n\r\nimport UsersList from './UsersList'\r\n\r\nconst AdminDashboard = (props) => {\r\n    const [ users, setUsers ] = useState([])\r\n    const [appliedUsers, setAppliedUsers ] = useState([])\r\n    const [key, setKey] = useState('');\r\n\r\n    useEffect(() => {\r\n        axios.get('http://dct-application-form.herokuapp.com/users/application-forms')\r\n             .then((response) => {\r\n                 const result = response.data\r\n                 setUsers(result.reverse())\r\n                 setAppliedUsers(result.reverse())\r\n             })\r\n            }, [])\r\n\r\n    //Filter developers based on job title        \r\n    const getFilteredUsers = (jobRole) => {\r\n        const result = users.filter(user => {\r\n            return user.jobTitle === jobRole\r\n        })\r\n        \r\n        setKey(jobRole)\r\n        setAppliedUsers(result)\r\n    }\r\n\r\n    //update application status in ui\r\n    const updateStatus = (id, status) => {\r\n        const result = appliedUsers.map(ele => {\r\n            if(ele._id === id){\r\n                return {...ele, status: status}\r\n            }\r\n            else{\r\n                return {...ele}\r\n            }\r\n        })\r\n        setAppliedUsers(result)\r\n    }    \r\n\r\n    return (\r\n        <div>\r\n            <h3>Admin Dashboard</h3>\r\n\r\n            <Tabs  activeKey={key} onSelect={(k) => getFilteredUsers(k)}  className=\"mb-3 mt-3\">\r\n                \r\n                <Tab eventKey=\"Front-End Developer\" title=\"Front-End Developers\">\r\n                    <UsersList appliedUsers={appliedUsers} title={key} \r\n                               updateStatus={updateStatus}/> \r\n                </Tab>\r\n                \r\n                <Tab eventKey=\"Node.js Developer\" title=\"Node.js Developers\">\r\n                    <UsersList appliedUsers={appliedUsers} title={key} \r\n                               updateStatus={updateStatus}/> \r\n                </Tab>\r\n\r\n                <Tab eventKey=\"MEAN Stack Developer\" title=\"MEAN Stack Developers\">\r\n                    <UsersList appliedUsers={appliedUsers} title={key} \r\n                               updateStatus={updateStatus}/> \r\n                </Tab>\r\n\r\n                <Tab eventKey=\"FULL Stack Developer\" title=\"Full Stack Developers\">\r\n                    <UsersList appliedUsers={appliedUsers} title={key} \r\n                               updateStatus={updateStatus}/> \r\n                </Tab>\r\n            </Tabs>    \r\n            \r\n            {key === '' && <UsersList appliedUsers={appliedUsers} title={key} \r\n                               updateStatus={updateStatus}/>}         \r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default AdminDashboard","import React from 'react'\r\nimport { Route, withRouter, NavLink } from 'react-router-dom'\r\n\r\n\r\nimport Home from './Home'\r\nimport ApplicationForm from './ApplicationForm'\r\nimport AdminDashboard from './AdminDashboard'\r\n\r\nconst NavBar = (props) => {\r\n\r\n    return (\r\n        <div >\r\n\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\r\n                <ul className=\"nav nav-pills mr-auto\">\r\n                    <li>\r\n                        <NavLink exact to=\"/\" activeClassName=\"active\">\r\n                            Home\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    <li >\r\n                        <NavLink to=\"/application-form\"  activeClassName=\"active\">\r\n                            Application Form\r\n                        </NavLink>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <NavLink to=\"/admin-dashboard\" activeClassName=\"active\">\r\n                            Admin Dashboard\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </nav>  \r\n\r\n            <Route path=\"/\" component={Home} exact={true} />\r\n            <Route path=\"/application-form\" component={ApplicationForm} />\r\n            <Route path=\"/admin-dashboard\" component={AdminDashboard} />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default withRouter(NavBar)","import React from 'react'\nimport './styles/navbar.css'\nimport NavBar from './component/NavBar'\n\n\nconst App = (props) => { \n\n    return (\n        <div className=\"container\">\n            <h1 className=\"text-center mt-2 mb-3\">Job Application App</h1>\n            <NavBar />\n        </div>\n    )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './App'\n\n    ReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>    \n    , document.getElementById('root'))"],"sourceRoot":""}